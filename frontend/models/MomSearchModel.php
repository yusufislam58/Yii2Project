<?php

namespace frontend\models;

use yii\data\ActiveDataProvider;
use yii\db\Query;
use frontend\models\Moms;

class MomSearchModel extends Moms
{

    public $child_name;
    public $chilsdId;
    public $childsCount;
    public $generalSearch;


    public function rules()
    {
        return[
            [['id','child_name','chilsdId','surname','generalSearch'], 'safe'],
        ];


    }

    public function attributeLabels()
    {
        return parent::attributeLabels(); // TODO: Change the autogenerated stub
    }


    public function search($params)
    {

        $query = Moms::find()->joinWith('childrens');

        $dataProvider= new ActiveDataProvider([
            'query' => $query,
        ]);

//        $this->generalSearch = isset($params['MomSearchModel']['name']) ? $params['MomSearchModel']['name'] : null;
//        $this->surname = isset($params['MomSearchModel']['surname']) ? $params['MomSearchModel']['surname'] : null;
//

        $this->load($params);
        if(!$this->validate()){
            //Valide olmadığı zaman nedenini gösterir
           // \Yii::warning([$this->getErrors()],"validate");
            $query->where('0=1');
        }
        $query->andFilterWhere(['like','moms.name',$this->name])
            ->andFilterWhere(['like','moms.surname',$this->surname])
            ->andFilterWhere(['moms.id' => $this->id])
        ->andFilterWhere(['like','childrens.name',$this->child_name])
        ->andFilterWhere(['childrens.id'=>$this->chilsdId])
        ->andFilterWhere(['moms.childrenCount'=>$this->childsCount]);


//       $query->joinWith(['childrens'=> function($query){
//           $query->andFilterwhere(['like',$this->getChildName(),'childrenNames']);
//       }
//       ]);

        print_r($query->createCommand()->rawSql);

        return $dataProvider;
    }
}